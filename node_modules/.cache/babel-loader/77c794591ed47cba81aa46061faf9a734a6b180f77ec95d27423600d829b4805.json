{"ast":null,"code":"var _jsxFileName = \"/Users/anonym0uslemon/Git/food-order-app/src/store/CartProvider.js\",\n  _s = $RefreshSig$();\nimport { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\n/*\n    Now you have a component that can manage all your cart data\n    It will also contain all the logic for the cart data which you\n    can use within each child component. \n*/\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0\n};\nfunction cartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id);\n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount\n    };\n  }\n  if (action.type === \"REMOVE\") {}\n}\nconst CartProvider = props => {\n  _s();\n  const [cartState, dispatchCartAction] = useReducer(cartReducer, defaultCartState);\n  function addItemToCartHandler(item) {\n    dispatchCartAction({\n      type: \"ADD\",\n      item: item\n    });\n  }\n  function removeItemFromCartHandler(id) {\n    dispatchCartAction({\n      type: \"REMOVE\",\n      id: id\n    });\n  }\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: cartContext,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(CartProvider, \"PxEugEseoIJIbjFwtAJal5z5ClY=\");\n_c = CartProvider;\nexport default CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["useReducer","CartContext","jsxDEV","_jsxDEV","defaultCartState","items","totalAmount","cartReducer","state","action","type","updatedTotalAmount","item","price","amount","existingCartItemIndex","findIndex","id","updatedItems","concat","CartProvider","props","_s","cartState","dispatchCartAction","addItemToCartHandler","removeItemFromCartHandler","cartContext","addItem","removeItem","Provider","value","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/anonym0uslemon/Git/food-order-app/src/store/CartProvider.js"],"sourcesContent":["import { useReducer } from \"react\";\nimport CartContext from \"./cart-context\";\n\n/*\n    Now you have a component that can manage all your cart data\n    It will also contain all the logic for the cart data which you\n    can use within each child component. \n*/\n\nconst defaultCartState = {\n  items: [],\n  totalAmount: 0,\n};\n\nfunction cartReducer(state, action) {\n  if (action.type === \"ADD\") {\n    const updatedTotalAmount = state.totalAmount + action.item.price * action.item.amount;\n\n    const existingCartItemIndex = state.items.findIndex(item => item.id === action.item.id); \n    const updatedItems = state.items.concat(action.item);\n    return {\n      items: updatedItems,\n      totalAmount: updatedTotalAmount,\n    };\n  }\n  if (action.type === \"REMOVE\") {\n  }\n}\n\nconst CartProvider = (props) => {\n  const [cartState, dispatchCartAction] = useReducer(\n    cartReducer,\n    defaultCartState\n  );\n\n  function addItemToCartHandler(item) {\n    dispatchCartAction({ type: \"ADD\", item: item });\n  }\n\n  function removeItemFromCartHandler(id) {\n    dispatchCartAction({ type: \"REMOVE\", id: id });\n  }\n\n  const cartContext = {\n    items: cartState.items,\n    totalAmount: cartState.totalAmount,\n    addItem: addItemToCartHandler,\n    removeItem: removeItemFromCartHandler,\n  };\n\n  return (\n    <CartContext.Provider value={cartContext}>\n      {props.children}\n    </CartContext.Provider>\n  );\n};\n\nexport default CartProvider;\n"],"mappings":";;AAAA,SAASA,UAAU,QAAQ,OAAO;AAClC,OAAOC,WAAW,MAAM,gBAAgB;;AAExC;AACA;AACA;AACA;AACA;AAJA,SAAAC,MAAA,IAAAC,OAAA;AAMA,MAAMC,gBAAgB,GAAG;EACvBC,KAAK,EAAE,EAAE;EACTC,WAAW,EAAE;AACf,CAAC;AAED,SAASC,WAAWA,CAACC,KAAK,EAAEC,MAAM,EAAE;EAClC,IAAIA,MAAM,CAACC,IAAI,KAAK,KAAK,EAAE;IACzB,MAAMC,kBAAkB,GAAGH,KAAK,CAACF,WAAW,GAAGG,MAAM,CAACG,IAAI,CAACC,KAAK,GAAGJ,MAAM,CAACG,IAAI,CAACE,MAAM;IAErF,MAAMC,qBAAqB,GAAGP,KAAK,CAACH,KAAK,CAACW,SAAS,CAACJ,IAAI,IAAIA,IAAI,CAACK,EAAE,KAAKR,MAAM,CAACG,IAAI,CAACK,EAAE,CAAC;IACvF,MAAMC,YAAY,GAAGV,KAAK,CAACH,KAAK,CAACc,MAAM,CAACV,MAAM,CAACG,IAAI,CAAC;IACpD,OAAO;MACLP,KAAK,EAAEa,YAAY;MACnBZ,WAAW,EAAEK;IACf,CAAC;EACH;EACA,IAAIF,MAAM,CAACC,IAAI,KAAK,QAAQ,EAAE,CAC9B;AACF;AAEA,MAAMU,YAAY,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAC9B,MAAM,CAACC,SAAS,EAAEC,kBAAkB,CAAC,GAAGxB,UAAU,CAChDO,WAAW,EACXH,gBACF,CAAC;EAED,SAASqB,oBAAoBA,CAACb,IAAI,EAAE;IAClCY,kBAAkB,CAAC;MAAEd,IAAI,EAAE,KAAK;MAAEE,IAAI,EAAEA;IAAK,CAAC,CAAC;EACjD;EAEA,SAASc,yBAAyBA,CAACT,EAAE,EAAE;IACrCO,kBAAkB,CAAC;MAAEd,IAAI,EAAE,QAAQ;MAAEO,EAAE,EAAEA;IAAG,CAAC,CAAC;EAChD;EAEA,MAAMU,WAAW,GAAG;IAClBtB,KAAK,EAAEkB,SAAS,CAAClB,KAAK;IACtBC,WAAW,EAAEiB,SAAS,CAACjB,WAAW;IAClCsB,OAAO,EAAEH,oBAAoB;IAC7BI,UAAU,EAAEH;EACd,CAAC;EAED,oBACEvB,OAAA,CAACF,WAAW,CAAC6B,QAAQ;IAACC,KAAK,EAAEJ,WAAY;IAAAK,QAAA,EACtCX,KAAK,CAACW;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACd,EAAA,CA1BIF,YAAY;AAAAiB,EAAA,GAAZjB,YAAY;AA4BlB,eAAeA,YAAY;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}